// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SDK/Grpc/kubemq.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace MQContract.KubeMQ.SDK.Grpc {
  internal static partial class kubemq
  {
    static readonly string __ServiceName = "kubemq.kubemq";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.Event> __Marshaller_kubemq_Event = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.Event.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.Result> __Marshaller_kubemq_Result = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.Result.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.Subscribe> __Marshaller_kubemq_Subscribe = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.Subscribe.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.EventReceive> __Marshaller_kubemq_EventReceive = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.EventReceive.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.Request> __Marshaller_kubemq_Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.Response> __Marshaller_kubemq_Response = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.Response.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.Empty> __Marshaller_kubemq_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.QueueMessage> __Marshaller_kubemq_QueueMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.QueueMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.SendQueueMessageResult> __Marshaller_kubemq_SendQueueMessageResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.SendQueueMessageResult.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchRequest> __Marshaller_kubemq_QueueMessagesBatchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchResponse> __Marshaller_kubemq_QueueMessagesBatchResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesRequest> __Marshaller_kubemq_ReceiveQueueMessagesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesResponse> __Marshaller_kubemq_ReceiveQueueMessagesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.StreamQueueMessagesRequest> __Marshaller_kubemq_StreamQueueMessagesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.StreamQueueMessagesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.StreamQueueMessagesResponse> __Marshaller_kubemq_StreamQueueMessagesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.StreamQueueMessagesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesRequest> __Marshaller_kubemq_AckAllQueueMessagesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesResponse> __Marshaller_kubemq_AckAllQueueMessagesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.PingResult> __Marshaller_kubemq_PingResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.PingResult.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.PollRequest> __Marshaller_kubemq_PollRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.PollRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MQContract.KubeMQ.SDK.Grpc.PollResponse> __Marshaller_kubemq_PollResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MQContract.KubeMQ.SDK.Grpc.PollResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Event, global::MQContract.KubeMQ.SDK.Grpc.Result> __Method_SendEvent = new grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Event, global::MQContract.KubeMQ.SDK.Grpc.Result>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendEvent",
        __Marshaller_kubemq_Event,
        __Marshaller_kubemq_Result);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Event, global::MQContract.KubeMQ.SDK.Grpc.Result> __Method_SendEventsStream = new grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Event, global::MQContract.KubeMQ.SDK.Grpc.Result>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "SendEventsStream",
        __Marshaller_kubemq_Event,
        __Marshaller_kubemq_Result);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Subscribe, global::MQContract.KubeMQ.SDK.Grpc.EventReceive> __Method_SubscribeToEvents = new grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Subscribe, global::MQContract.KubeMQ.SDK.Grpc.EventReceive>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeToEvents",
        __Marshaller_kubemq_Subscribe,
        __Marshaller_kubemq_EventReceive);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Subscribe, global::MQContract.KubeMQ.SDK.Grpc.Request> __Method_SubscribeToRequests = new grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Subscribe, global::MQContract.KubeMQ.SDK.Grpc.Request>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeToRequests",
        __Marshaller_kubemq_Subscribe,
        __Marshaller_kubemq_Request);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Request, global::MQContract.KubeMQ.SDK.Grpc.Response> __Method_SendRequest = new grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Request, global::MQContract.KubeMQ.SDK.Grpc.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendRequest",
        __Marshaller_kubemq_Request,
        __Marshaller_kubemq_Response);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Response, global::MQContract.KubeMQ.SDK.Grpc.Empty> __Method_SendResponse = new grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Response, global::MQContract.KubeMQ.SDK.Grpc.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendResponse",
        __Marshaller_kubemq_Response,
        __Marshaller_kubemq_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.QueueMessage, global::MQContract.KubeMQ.SDK.Grpc.SendQueueMessageResult> __Method_SendQueueMessage = new grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.QueueMessage, global::MQContract.KubeMQ.SDK.Grpc.SendQueueMessageResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendQueueMessage",
        __Marshaller_kubemq_QueueMessage,
        __Marshaller_kubemq_SendQueueMessageResult);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchRequest, global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchResponse> __Method_SendQueueMessagesBatch = new grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchRequest, global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendQueueMessagesBatch",
        __Marshaller_kubemq_QueueMessagesBatchRequest,
        __Marshaller_kubemq_QueueMessagesBatchResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesRequest, global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesResponse> __Method_ReceiveQueueMessages = new grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesRequest, global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReceiveQueueMessages",
        __Marshaller_kubemq_ReceiveQueueMessagesRequest,
        __Marshaller_kubemq_ReceiveQueueMessagesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.StreamQueueMessagesRequest, global::MQContract.KubeMQ.SDK.Grpc.StreamQueueMessagesResponse> __Method_StreamQueueMessage = new grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.StreamQueueMessagesRequest, global::MQContract.KubeMQ.SDK.Grpc.StreamQueueMessagesResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "StreamQueueMessage",
        __Marshaller_kubemq_StreamQueueMessagesRequest,
        __Marshaller_kubemq_StreamQueueMessagesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesRequest, global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesResponse> __Method_AckAllQueueMessages = new grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesRequest, global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AckAllQueueMessages",
        __Marshaller_kubemq_AckAllQueueMessagesRequest,
        __Marshaller_kubemq_AckAllQueueMessagesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Empty, global::MQContract.KubeMQ.SDK.Grpc.PingResult> __Method_Ping = new grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.Empty, global::MQContract.KubeMQ.SDK.Grpc.PingResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Ping",
        __Marshaller_kubemq_Empty,
        __Marshaller_kubemq_PingResult);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.PollRequest, global::MQContract.KubeMQ.SDK.Grpc.PollResponse> __Method_Poll = new grpc::Method<global::MQContract.KubeMQ.SDK.Grpc.PollRequest, global::MQContract.KubeMQ.SDK.Grpc.PollResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "Poll",
        __Marshaller_kubemq_PollRequest,
        __Marshaller_kubemq_PollResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::MQContract.KubeMQ.SDK.Grpc.KubemqReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for kubemq</summary>
    public partial class kubemqClient : grpc::ClientBase<kubemqClient>
    {
      /// <summary>Creates a new client for kubemq</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public kubemqClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for kubemq that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public kubemqClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected kubemqClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected kubemqClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.Result SendEvent(global::MQContract.KubeMQ.SDK.Grpc.Event request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.Result SendEvent(global::MQContract.KubeMQ.SDK.Grpc.Event request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendEvent, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.Result> SendEventAsync(global::MQContract.KubeMQ.SDK.Grpc.Event request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.Result> SendEventAsync(global::MQContract.KubeMQ.SDK.Grpc.Event request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendEvent, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::MQContract.KubeMQ.SDK.Grpc.Event, global::MQContract.KubeMQ.SDK.Grpc.Result> SendEventsStream(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendEventsStream(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::MQContract.KubeMQ.SDK.Grpc.Event, global::MQContract.KubeMQ.SDK.Grpc.Result> SendEventsStream(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_SendEventsStream, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MQContract.KubeMQ.SDK.Grpc.EventReceive> SubscribeToEvents(global::MQContract.KubeMQ.SDK.Grpc.Subscribe request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeToEvents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MQContract.KubeMQ.SDK.Grpc.EventReceive> SubscribeToEvents(global::MQContract.KubeMQ.SDK.Grpc.Subscribe request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeToEvents, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MQContract.KubeMQ.SDK.Grpc.Request> SubscribeToRequests(global::MQContract.KubeMQ.SDK.Grpc.Subscribe request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeToRequests(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MQContract.KubeMQ.SDK.Grpc.Request> SubscribeToRequests(global::MQContract.KubeMQ.SDK.Grpc.Subscribe request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeToRequests, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.Response SendRequest(global::MQContract.KubeMQ.SDK.Grpc.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.Response SendRequest(global::MQContract.KubeMQ.SDK.Grpc.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendRequest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.Response> SendRequestAsync(global::MQContract.KubeMQ.SDK.Grpc.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.Response> SendRequestAsync(global::MQContract.KubeMQ.SDK.Grpc.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendRequest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.Empty SendResponse(global::MQContract.KubeMQ.SDK.Grpc.Response request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendResponse(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.Empty SendResponse(global::MQContract.KubeMQ.SDK.Grpc.Response request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendResponse, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.Empty> SendResponseAsync(global::MQContract.KubeMQ.SDK.Grpc.Response request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendResponseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.Empty> SendResponseAsync(global::MQContract.KubeMQ.SDK.Grpc.Response request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendResponse, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.SendQueueMessageResult SendQueueMessage(global::MQContract.KubeMQ.SDK.Grpc.QueueMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendQueueMessage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.SendQueueMessageResult SendQueueMessage(global::MQContract.KubeMQ.SDK.Grpc.QueueMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendQueueMessage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.SendQueueMessageResult> SendQueueMessageAsync(global::MQContract.KubeMQ.SDK.Grpc.QueueMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendQueueMessageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.SendQueueMessageResult> SendQueueMessageAsync(global::MQContract.KubeMQ.SDK.Grpc.QueueMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendQueueMessage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchResponse SendQueueMessagesBatch(global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendQueueMessagesBatch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchResponse SendQueueMessagesBatch(global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendQueueMessagesBatch, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchResponse> SendQueueMessagesBatchAsync(global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendQueueMessagesBatchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchResponse> SendQueueMessagesBatchAsync(global::MQContract.KubeMQ.SDK.Grpc.QueueMessagesBatchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendQueueMessagesBatch, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesResponse ReceiveQueueMessages(global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReceiveQueueMessages(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesResponse ReceiveQueueMessages(global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReceiveQueueMessages, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesResponse> ReceiveQueueMessagesAsync(global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReceiveQueueMessagesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesResponse> ReceiveQueueMessagesAsync(global::MQContract.KubeMQ.SDK.Grpc.ReceiveQueueMessagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReceiveQueueMessages, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::MQContract.KubeMQ.SDK.Grpc.StreamQueueMessagesRequest, global::MQContract.KubeMQ.SDK.Grpc.StreamQueueMessagesResponse> StreamQueueMessage(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StreamQueueMessage(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::MQContract.KubeMQ.SDK.Grpc.StreamQueueMessagesRequest, global::MQContract.KubeMQ.SDK.Grpc.StreamQueueMessagesResponse> StreamQueueMessage(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_StreamQueueMessage, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesResponse AckAllQueueMessages(global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AckAllQueueMessages(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesResponse AckAllQueueMessages(global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AckAllQueueMessages, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesResponse> AckAllQueueMessagesAsync(global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AckAllQueueMessagesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesResponse> AckAllQueueMessagesAsync(global::MQContract.KubeMQ.SDK.Grpc.AckAllQueueMessagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AckAllQueueMessages, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.PingResult Ping(global::MQContract.KubeMQ.SDK.Grpc.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Ping(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MQContract.KubeMQ.SDK.Grpc.PingResult Ping(global::MQContract.KubeMQ.SDK.Grpc.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Ping, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.PingResult> PingAsync(global::MQContract.KubeMQ.SDK.Grpc.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MQContract.KubeMQ.SDK.Grpc.PingResult> PingAsync(global::MQContract.KubeMQ.SDK.Grpc.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Ping, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::MQContract.KubeMQ.SDK.Grpc.PollRequest, global::MQContract.KubeMQ.SDK.Grpc.PollResponse> Poll(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Poll(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::MQContract.KubeMQ.SDK.Grpc.PollRequest, global::MQContract.KubeMQ.SDK.Grpc.PollResponse> Poll(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_Poll, null, options);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override kubemqClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new kubemqClient(configuration);
      }
    }

  }
}
#endregion
